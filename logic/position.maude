fmod POSITION is
    pr INT .

    sorts Position PositionList OrderedPostionList  .
    subsort Position < PositionList .
    subsort Position < OrderedPostionList .

    op emptyPositionList : -> PositionList [ctor] .
    op _\_ : PositionList PositionList -> PositionList [ctor assoc comm id: emptyPositionList] .
    op ((_,_)) : Int Int -> Position [ctor] .

    op emptyOrderPositionList : -> OrderedPostionList [ctor] .
    op _%_ : OrderedPostionList OrderedPostionList -> OrderedPostionList [ctor assoc id: emptyOrderPositionList].

    var P : Position .
    vars x y : Int .
    vars positionList positionList' : PositionList .
    vars orderedPostionList : OrderedPostionList .

    op canDown : Position -> Bool .
    eq canDown((x, y)) = s(x) <= 19 .

    op canRight : Position -> Bool .
    eq canRight((x, y)) = s(y) <= 9 .

    op canLeft : Position -> Bool .
    eq canLeft((x, y)) = y - 1 >= 0 .

    op down : Position -> Position .
    eq down((x, y)) = (s(x), y) .

    op right : Position -> Position .
    eq right((x, y)) = (x, s(y)) .
    
    op left : Position -> Position .
    eq left((x, y)) = (x, y - 1) .

    op inRange : Position -> Bool .
    ceq inRange((x,y)) = true
        if x >= 0 /\ x <= 19 /\ y >= 0 /\ y <= 9 .
    eq inRange((x,y)) = false [owise] .

    op clockwise : PositionList -> PositionList .
    eq clockwise(positionList) = orderedToList(clockwiseRotation(setUnorderd(positionList, emptyOrderPositionList)), emptyPositionList) .

    op clockwiseRotation : OrderedPostionList -> OrderedPostionList .
    --- iBlock
    eq clockwiseRotation((x,y) % (x, s(y)) % (x, s(s(y))) % (x,s(s(s(y))))) =
        (x - 2,s(s(y))) % (x - 1, s(s(y))) % (x, s(s(y))) % (s(x),s(s(y))) .

    eq clockwiseRotation((x,y) % (s(x), y) % (s(s(x)), y) % (s(s(s(x))),y)) =
        (s(s(x)), y - 2) % (s(s(x)), y - 1) % (s(s(x)), y) % (s(s(x)), s(y)) .

    --- sBlock
    eq clockwiseRotation((x,s(y)) % (x, s(s(y))) % (s(x), y) % (s(x), s(y) )) =
        (x - 1, y) % (x, y) % (x, s(y)) % (s(x), s(y)) .

    eq clockwiseRotation((x,y) % (s(x), y) % (s(x), s(y)) % (s(s(x)), s(y))) =
        (s(s(x)), y) % (s(s(x)), s(y)) % (s(x), s(y)) % (s(x), s(s(y))) .

    --- zBlock
    eq clockwiseRotation((x,y) % (x, s(y)) % (s(x), s(y)) % (s(x), s(s(y)))) =
        (x - 1, s(s(y))) % (x, s(s(y))) % (x, s(y)) % (s(x), s(y)) .

    eq clockwiseRotation((x, s(y)) % (s(x), y) % (s(x), s(y)) % (s(s(x)), y)) =
        (s(x), y - 1) % (s(x), y) % (s(s(x)), y) % (s(s(x)), s(y)) .
    
    --- tBlock
    eq clockwiseRotation((x, s(y)) % (s(x), y) % (s(x), s(y)) % (s(x), s(s(y)))) =
        (x - 1, s(y)) % (x, s(y)) % (s(x), s(y)) % (x, s(s(y))) .

    eq clockwiseRotation((x, y) % (s(x), y) % (s(x), s(y)) % (s(s(x)),y)) =
        (s(x), y - 1) % (s(x), y) % (s(x), s(y)) % (s(s(x)), y) .

    eq clockwiseRotation((x, y) % (x, s(y)) % (x, s(s(y))) % (s(x), s(y))) =
        (x - 1, s(y)) % (x, y) % (x, s(y)) % (s(x), s(y)) .

    eq clockwiseRotation((x, s(y)) % (s(x), y) % (s(x), s(y)) % (s(s(x)), s(y))) =
        (s(x), s(y)) % (s(s(x)), y) % (s(s(x)), s(y)) % (s(s(x)), s(s(y))) .

    --- jBlock
    eq clockwiseRotation((x, y) % (s(x), y) % (s(x), s(y)) % (s(x), s(s(y)))) =
        (x - 1, s(y)) % (x - 1, s(s(y))) % (x, s(y)) % (s(x), s(y)) .
    
    eq clockwiseRotation((x,y) % (x, s(y)) % (s(x), y) % (s(s(x)), y)) =
        (s(x), y - 1) % (s(x), y) % (s(x), s(y)) % (s(s(x)), s(y)) .

    eq clockwiseRotation((x, y) % (x, s(y)) % (x, s(s(y))) % (s(x), s(s(y)))) =
        (x - 1, s(y)) % (x, s(y)) % (s(x), s(y)) % (s(x), y) .
    
    eq clockwiseRotation((x, s(y)) % (s(x), s(y)) % (s(s(x)), y) % (s(s(x)), s(y))) =
        (s(x), y) % (s(s(x)), y) % (s(s(x)), s(y)) % (s(s(x)), s(s(y))) .

    --- lBlock
    eq clockwiseRotation((x, s(s(y))) % (s(x), y) % (s(x), s(y)) % (s(x), s(s(y)))) =
        (x - 1, s(y)) % (x, s(y)) % (s(x), s(y)) % (s(x), s(s(y))) .
    
    eq clockwiseRotation((x,y) % (s(x), y) % (s(s(x)), y) % (s(s(x)), s(y))) =
        (s(x), y - 1) % (s(x), y) % (s(x), s(y)) % (s(s(x)), y - 1) .
    
    eq clockwiseRotation((x, y) % (x, s(y)) % (x, s(s(y))) % (s(x), y)) =
        (x - 1, y) % (x - 1, s(y)) % (x, s(y)) % (s(x), s(y)) .
    
    eq clockwiseRotation((x, y) % (x, s(y)) % (s(x), s(y)) % (s(s(x)), s(y))) =
        (s(x), s(s(y))) % (s(s(x)), y) % (s(s(x)), s(y)) % (s(s(x)), s(s(y))) .
        
    --- default
    eq clockwiseRotation(orderedPostionList) =
        orderedPostionList [owise] .

    op setUnorderd : PositionList OrderedPostionList -> OrderedPostionList .
    eq setUnorderd((x,y) \ positionList, orderedPostionList) = 
        setUnorderd(positionList, orderedPostionList % (x, y)) .
    eq setUnorderd(emptyPositionList, orderedPostionList) = orderedPostionList .

    op orderedToList : OrderedPostionList PositionList -> PositionList .
    eq orderedToList((x,y) % orderedPostionList, positionList) =
        orderedToList(orderedPostionList, positionList \ (x, y)) .
    eq orderedToList(emptyOrderPositionList, positionList) = positionList [owise] .
endfm